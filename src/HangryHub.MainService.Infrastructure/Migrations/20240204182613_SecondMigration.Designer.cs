// <auto-generated />
using System;
using HangryHub.MainService.Infrastructure.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HangryHub.MainService.Infrastructure.Migrations
{
    [DbContext(typeof(MainDBContext))]
    [Migration("20240204182613_SecondMigration")]
    partial class SecondMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("HangryHub.MainService.Domain.RestaurantAggregate.Entities.AdditionalIngredient", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("RestaurantItemId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantItemId");

                    b.ToTable("AdditionalIngredient");
                });

            modelBuilder.Entity("HangryHub.MainService.Domain.RestaurantAggregate.Entities.Coupon", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ExpirationDateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("RestaurantId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Coupon");
                });

            modelBuilder.Entity("HangryHub.MainService.Domain.RestaurantAggregate.Entities.Ingredient", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RestaurantItemId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantItemId");

                    b.ToTable("Ingredient");
                });

            modelBuilder.Entity("HangryHub.MainService.Domain.RestaurantAggregate.Entities.RestaurantItem", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnName("RestaurantItemId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RestaurantId")
                        .HasColumnType("TEXT")
                        .HasColumnName("RestaurantId");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId");

                    b.ToTable("RestaurantItems", (string)null);
                });

            modelBuilder.Entity("HangryHub.MainService.Domain.RestaurantAggregate.Restaurant", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnName("RestaurantId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Restaurants", (string)null);
                });

            modelBuilder.Entity("HangryHub.MainService.Domain.RestaurantAggregate.Entities.AdditionalIngredient", b =>
                {
                    b.HasOne("HangryHub.MainService.Domain.RestaurantAggregate.Entities.RestaurantItem", "RestaurantItem")
                        .WithMany("AdditionalIngredients")
                        .HasForeignKey("RestaurantItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RestaurantItem");
                });

            modelBuilder.Entity("HangryHub.MainService.Domain.RestaurantAggregate.Entities.Coupon", b =>
                {
                    b.HasOne("HangryHub.MainService.Domain.RestaurantAggregate.Restaurant", "Restaurant")
                        .WithMany("AvailableCoupons")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("HangryHub.MainService.Domain.RestaurantAggregate.Entities.Ingredient", b =>
                {
                    b.HasOne("HangryHub.MainService.Domain.RestaurantAggregate.Entities.RestaurantItem", "RestaurantItem")
                        .WithMany("Ingredients")
                        .HasForeignKey("RestaurantItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RestaurantItem");
                });

            modelBuilder.Entity("HangryHub.MainService.Domain.RestaurantAggregate.Entities.RestaurantItem", b =>
                {
                    b.HasOne("HangryHub.MainService.Domain.RestaurantAggregate.Restaurant", "Restaurant")
                        .WithMany("Items")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("HangryHub.MainService.Domain.RestaurantAggregate.Restaurant", b =>
                {
                    b.OwnsOne("HangryHub.MainService.Domain.RestaurantAggregate.Entities.RestaurantDetail", "Detail", b1 =>
                        {
                            b1.Property<Guid>("RestaurantId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Address")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Contact")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Note")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("RestaurantId");

                            b1.ToTable("Restaurants");

                            b1.WithOwner()
                                .HasForeignKey("RestaurantId");
                        });

                    b.Navigation("Detail")
                        .IsRequired();
                });

            modelBuilder.Entity("HangryHub.MainService.Domain.RestaurantAggregate.Entities.RestaurantItem", b =>
                {
                    b.Navigation("AdditionalIngredients");

                    b.Navigation("Ingredients");
                });

            modelBuilder.Entity("HangryHub.MainService.Domain.RestaurantAggregate.Restaurant", b =>
                {
                    b.Navigation("AvailableCoupons");

                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
